@model IEnumerable<IICURas.Models.RecordViewModel>

@{
    ViewBag.Title = "Index";
}


    <div class="col-xs-12">
        @if (ViewBag.totalRecord < ViewBag.RecordLimit)
        {
    
            <h2><small>@Html.ActionLink("Randomize New Paper", "Create")</small></h2>
    
        }
        else
        {
            <h2><small>No more randomization needed. Thank you for your time and effort.</small></h2>        
        }
        <br />
    </div>

    <div class="col-xs-12">
        <form method="get">
            <h4 class="col-xs-3">
                @Html.DisplayNameFor(model => model.PaperNumber): </h4>
            <div class="col-xs-6">
    <input type="search" name="searchTerm"  class="form-control"/>
                </div>
    <button type="submit" class="btn btn-warning">Search</button>

        </form>
        <h5 class="col-xs-12">Found <strong>@Model.Count() </strong>manuscripts that contain with "@ViewBag.searchTerm"</h5>
    </div>

    <div  class="table-responsive col-xs-12">
        <table class="table table-striped ">
            <tr>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.PaperNumber).ToString(), "Index", new { sortOrder = (ViewBag.sortOrder == "PaperNumber") ? "PaperNumber desc" : "PaperNumber", searchTerm = ViewBag.searchTerm })

                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.CountryCountryName).ToString(), "Index", new { sortOrder = (ViewBag.sortOrder == "CountryCountryName") ? "CountryCountryName desc" : "CountryCountryName", searchTerm = ViewBag.searchTerm })
                </th>
                <th>
                    @Html.ActionLink("ARRIVE checklist already included at submission", "Index", new { sortOrder = (ViewBag.sortOrder == "hadarrivechecklist") ? "hadarrivechecklist desc" : "hadarrivechecklist", searchTerm = ViewBag.searchTerm })
                </th>
                <th>
                    @Html.ActionLink("ARRIVE checklist requested", "Index", new { sortOrder = (ViewBag.sortOrder == "Action") ? "Action desc" : "Action", searchTerm = ViewBag.searchTerm })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.EntryUser).ToString(), "Index", new { sortOrder = (ViewBag.sortOrder == "EntryUser") ? "EntryUser desc" : "EntryUser", searchTerm = ViewBag.searchTerm })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.RandomizationTime).ToString(), "Index", new { sortOrder = (ViewBag.sortOrder == "RandomizationTime") ? "RandomizationTime desc" : "RandomizationTime", searchTerm = ViewBag.searchTerm })

                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaperNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CountryCountryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.hadarrivechecklist)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Action)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EntryUser)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RandomizationTime)
                    </td>
                    <td>
                        @{ViewBag.RecordID = item.RecordID;}
                        @Html.Partial("_delete")
                    </td>
                </tr>
            }

        </table>
    </div>

